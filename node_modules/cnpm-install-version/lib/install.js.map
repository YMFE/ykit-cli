{"version":3,"sources":["../src/install.js"],"names":["childProcess","require","path","shelljs","util","CWD","process","cwd","TEMP","join","Math","random","install","npmPackage","options","destination","sanitize","overwrite","quiet","log","error","destinationPath","directoryExists","errored","rm","mkdir","npmrcFile","test","cp","installOptions","stdio","registry","command","platform","spawnSync","packageName","getPackageName","ls","forEach","dep","from","toString","to","mv","err","console","exit","module","exports"],"mappings":"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","file":"install.js","sourcesContent":["const childProcess = require('child_process');\nconst path = require('path');\nconst shelljs = require('shelljs');\n\nconst util = require('./util.js');\n\nconst CWD = process.cwd();\nconst TEMP = path.join(CWD, 'node_modules', '.npm-install-version-temp' + Math.random());\n\nfunction install (npmPackage, options = {}) {\n  const {\n    destination = util.sanitize(npmPackage),\n    overwrite = false,\n    quiet = false\n  } = options;\n\n  const log = quiet ? () => {} : (...args) => console.log(...args);\n\n  if (!npmPackage) util.error();\n  const destinationPath = path.join(CWD, 'node_modules', destination);\n  if (!overwrite && util.directoryExists(destinationPath)) {\n    return log(`Directory at ${destinationPath} already exists, skipping`);\n  }\n\n  let errored = false;\n  try {\n    // make temp install dir\n    shelljs.rm('-rf', TEMP);\n    shelljs.mkdir('-p', path.join(TEMP, 'node_modules'));\n\n    // copy local .npmrc file if exists\n    const npmrcFile = path.join(CWD, '.npmrc');\n    if (shelljs.test('-f', npmrcFile)) {\n      shelljs.cp(npmrcFile, TEMP);\n    }\n\n    // install package to temp dir\n    const installOptions = {\n      cwd: TEMP,\n      stdio: [null, null, null],\n      registry: 'https://registry.npm.taobao.org'\n    };\n    const command = process.platform === 'win32' ? 'npm.cmd' : 'npm';\n    childProcess.spawnSync(command, ['install', npmPackage], installOptions);\n\n    // get real package name\n    const packageName = util.getPackageName(npmPackage);\n\n    // move deps inside package\n    shelljs.mkdir('-p', path.join(TEMP, 'node_modules', packageName, 'node_modules'));\n    shelljs.ls(path.join(TEMP, 'node_modules'))\n      .forEach(dep => {\n        if (dep === packageName) return;\n        const from = path.join(TEMP, 'node_modules', dep).toString();\n        const to = path.join(TEMP, 'node_modules', packageName, 'node_modules', dep).toString();\n        shelljs.mv(from, to);\n      });\n\n    // copy to node_modules/\n    shelljs.rm('-rf', destinationPath);\n    shelljs.mv(path.join(TEMP, 'node_modules', packageName), destinationPath);\n\n    log(`Installed ${npmPackage} to ${destinationPath}`);\n  } catch (err) {\n    errored = true;\n    console.error(`Error installing ${npmPackage}`);\n    console.error(err.toString());\n  } finally {\n    // clean up temp install dir\n    shelljs.rm('-rf', TEMP);\n\n    if (errored) process.exit(1);\n  }\n}\n\nmodule.exports = install;\n"]}